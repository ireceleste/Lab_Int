#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Thu Nov  3 15:18:57 2022@author: IreneCelestino"""import numpy as npfrom matplotlib import pyplot as pltimport pylabfrom scipy.optimize import curve_fit# =============================================================================# Misura 0# =============================================================================t1, ch1= np.loadtxt('Dati/ALL0000/F0000CH1.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t2, ch2= np.loadtxt('Dati/ALL0000/F0000CH2.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t4, ch4= np.loadtxt('Dati/ALL0000/F0000CH4.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t1*=1e9t2*=1e9t4*=1e9t1+=15t2+=15t4+=15plt.figure(1)plt.plot(t1, ch1*4, '.', markersize=2,  label='CH1', color='blue')plt.plot(t2, ch2*4, '.', markersize=2,   label='CH2', color='orange')plt.plot(t4, ch4, '.',markersize=2, label='CH4',   color='green')plt.xlim(-35, 165)plt.grid(ls='dashed')plt.legend(loc='best')plt.xlabel('Time [ns]')plt.ylabel('Signal [V]')plt.title("Segnale LIN dell'unità di coincidenza")plt.savefig("Grafici/LIN_segnale.png")plt.figure(2)plt.plot(t1, ch1*4, '.', markersize=2,   label='CH1')plt.plot(t2, ch2*4, '.', markersize=2,   label='CH2')plt.plot(t4, ch4, '.',markersize=2,   label='CH4')plt.xlim(-5, 30)plt.grid(ls='dashed')plt.legend(loc='best')plt.xlabel('Time [ns]')plt.ylabel('Signal [V]')plt.title("Ritardo introdotto dall'unità di coincidenza")plt.savefig("Grafici/LIN_ritardo.png")# =============================================================================# Misura 1 -  PM5 alimentato a 1900 V è molto rumoroso e fa scattare# unità di discriminazione, che ha soglia a -40 mV# =============================================================================t1, ch1= np.loadtxt('Dati/ALL0001/F0001CH1.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t2, ch2= np.loadtxt('Dati/ALL0001/F0001CH2.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t4, ch4= np.loadtxt('Dati/ALL0001/F0001CH4.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t1*=1e9t2*=1e9t4*=1e9ch2+=0.1plt.figure(3)plt.plot(t1, ch1, '.', markersize=2,   label='CH1')plt.plot(t2, ch2, '.', markersize=2,   label='CH2')#plt.plot(t4, ch4*1e-1, '.',markersize=2,   label='CH4')plt.xlim(-50, 280)plt.grid(ls='dashed')plt.legend(loc='best')plt.xlabel('Time [ns]')plt.ylabel('Signal [V]')plt.title("PM5 e Discriminatore con alimentazione a 1900 V")plt.savefig("Grafici/PM5_rumore.png")# =============================================================================# Misura 3 -  PM5 alimentato a 1670 V e uscita OUT coincidenza# =============================================================================t1, ch1= np.loadtxt('Dati/ALL0003/F0003CH1.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t4, ch4= np.loadtxt('Dati/ALL0003/F0003CH4.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t1*=1e9t4*=1e9plt.figure(4)plt.plot(t1, ch1*10, '.', markersize=2,   label='CH1')plt.plot(t4, ch4, '.',markersize=2,   label='CH4')#plt.xlim(-0.3e2, 0.2e2)plt.grid(ls='dashed')plt.legend(loc='best')plt.xlabel('Time [ns]')plt.ylabel('Signal [V]')plt.title("Segnale OUT dell'unità di coincidenza")plt.savefig("Grafici/OUT_segnale.png")# =============================================================================# Misura 2 -  PM5 alimentato a 1670 V e uscita LIN coincidenza# =============================================================================t1, ch1= np.loadtxt('Dati/ALL0002/F0002CH1.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t2, ch2= np.loadtxt('Dati/ALL0002/F0002CH2.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t4, ch4= np.loadtxt('Dati/ALL0002/F0002CH4.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t1*=1e9t4*=1e9t2*=1e9plt.figure(5)plt.plot(t1, ch1, '.', markersize=2,   label='CH1')plt.plot(t2, ch2, '.', markersize=2,   label='CH2')plt.axhline(-40e-3, xmin=-50, xmax=150, ls='-', color='k', label='Threshold')#plt.plot(t4, ch4*1e-1, '.',markersize=2,   label='CH4')plt.xlim(-50, 150)plt.grid(ls='dashed')plt.legend(loc='best')plt.xlabel('Time [ns]')plt.ylabel('Signal [V]')plt.title("Segnale PM7 e discriminatore")plt.savefig("Grafici/PM5_discriminatore.png")plt.figure(8)t1+=35plt.plot(t1, ch1*1e3, '.', markersize=2,   label='CH1')plt.xlim(-40, 75)plt.grid(ls='dashed')#plt.legend(loc='best')plt.xlabel('Time [ns]')plt.ylabel('Signal [mV]')plt.title("Segnale Fotomoltiplicatore PM7")plt.savefig("Grafici/PM5_segnale.png")# =============================================================================# Misura 4 - Riflessioni in cavo coassiale lungo# =============================================================================t1, ch1= np.loadtxt('Dati/ALL0004/F0000CH1.CSV', delimiter=',', skiprows=1,                     usecols=[3,4], unpack='True')t1*=1e9plt.figure(6)plt.plot(t1, ch1, '.', markersize=2,   label='CH1')#plt.plot(t4, ch4*1e-1, '.',markersize=2,   label='CH4')#plt.xlim(-0.3e2, 0.2e2)plt.grid(ls='dashed')plt.legend(loc='best')plt.xlabel('Time [ns]')plt.ylabel('Signal [V]')plt.title("Riflessioni in un cavo coassiale lungo senza terminazione")plt.savefig("Grafici/riflessioni.png")print(50e-6*270)print(1.65*0.03, 1.00*0.03)print(3*10**8*270e-9/2)print(1/1.65/2/40.5, np.sqrt(0.05**2*1/1.65**4+0.03**2/1.65**2))print(1.9/3.1)plt.show()